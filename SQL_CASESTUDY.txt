--CREATED BY NITYA

--CREATED COURSES TABLE
CREATE TABLE COURSES(CID INT PRIMARY KEY,CNAME VARCHAR(10) NOT NULL,SHIFTS VARCHAR(20) CHECK(SHIFTS IN('MORNING','EVENING')),FEES SMALLMONEY NOT NULL)

--INSERTED ROWS INTO COURSE TABLE
INSERT INTO COURSES VALUES(1,'SQL','MORNING',10000)
INSERT INTO COURSES VALUES(2,'JAVA','EVENING',18000)
INSERT INTO COURSES VALUES(3,'C','EVENING',8383.9398)
INSERT INTO COURSES VALUES(4,'CPP','MORNING',0)
INSERT INTO COURSES VALUES(5,'C#','MORNING',1000)
INSERT INTO COURSES VALUES(6,'PYTHON','EVENING',5000)

--RETRIEVING DATA FROM COURSES TABLE
SELECT * FROM COURSES



--CREATED STUDENTS TABLE
CREATE TABLE STUDENTS(SID INT PRIMARY KEY,SNAME VARCHAR(10) NOT NULL,ORIGIN CHAR(1) CHECK (ORIGIN IN('L','F')),TYPE CHAR(1) CHECK(TYPE IN('N','F')))

--INSERTED ROWS INTO STUDENTS TABLE
INSERT INTO STUDENTS VALUES(1,'LILLY','F','N')
INSERT INTO STUDENTS VALUES(2,'JAY','F','F')
INSERT INTO STUDENTS VALUES(3,'RADHI','L','F')
INSERT INTO STUDENTS VALUES(4,'SONAL','L','N')

--RETRIEVING DATA FROM STUDENTS TABLE
SELECT * FROM STUDENTS

--CREATED ADMISSIONS TABLE
CREATE TABLE ADMISSIONS(SID INT FOREIGN KEY REFERENCES STUDENTS(SID),CID INT FOREIGN KEY REFERENCES COURSES(CID),DOJ DATETIME CHECK(DOJ>='2020/01/01' AND DOJ<='2020/01/20'),GRADE CHAR(1) CHECK(GRADE IN('A','B','C')))

--INSERTING ROWS INTO ADMISSIONS TABLE
INSERT INTO ADMISSIONS VALUES(1,1,'2020/01/10','A')
INSERT INTO ADMISSIONS VALUES(2,3,'2020/01/02','B')
INSERT INTO ADMISSIONS VALUES(3,2,'2020/01/14','A')
INSERT INTO ADMISSIONS VALUES(1,4,'2020/01/09','C')
INSERT INTO ADMISSIONS VALUES(2,5,'2020/01/10','B')
INSERT INTO ADMISSIONS VALUES(3,5,'2020/01/05','A')
INSERT INTO ADMISSIONS VALUES(1,2,'2020/01/02','A')
INSERT INTO ADMISSIONS VALUES(2,2,'2020/01/08','A')

--RETRIEVING DATA FROM ADMISSIONS TABLE
SELECT * FROM ADMISSIONS

--1)List the No.of students based on course wise.
SELECT CID,COUNT(SID) AS NUMBEROFSTUDENTS 
FROM ADMISSIONS GROUP BY CID

--List the student details which student origin Is foreign and
--no.of values exceeds 10?
SELECT * FROM STUDENTS WHERE ORIGIN LIKE 'F' AND 
(SELECT COUNT(SID) FROM STUDENTS WHERE ORIGIN LIKE 'F')>10

SELECT * from STUDENTS WHERE ORIGIN IN
(SELECT ORIGIN from STUDENTS WHERE ORIGIN ='F' GROUP BY ORIGIN HAVING COUNT(*)>10)


--2)List the Student,Course,Admissions details which student
--taken some course ?
SELECT STUDENTS.*,COURSES.*,ADMISSIONS.* FROM STUDENTS 
INNER JOIN ADMISSIONS ON STUDENTS.SID=ADMISSIONS.SID 
INNER JOIN COURSES ON COURSES.CID=ADMISSIONS.CID

SELECT * FROM STUDENTS,COURSES,ADMISSIONS WHERE 
ADMISSIONS.SID=STUDENTS.SID AND ADMISSIONS.CID=COURSES.CID 


--3)List the all Student name which students grade is ‘A’ and “B’?
SELECT SNAME FROM STUDENTS WHERE SID 
IN(SELECT SID FROM ADMISSIONS WHERE GRADE IN('A','B'))

--4)List the Course details which course does not have any
--students?

SELECT * FROM COURSES WHERE NOT EXISTS
(SELECT 1 FROM ADMISSIONS WHERE ADMISSIONS.CID=COURSES.CID)



--5)List the Fees details based on Student id which is more than
--4000?
SELECT ADMISSIONS.SID ,COURSES.FEES FROM ADMISSIONS INNER JOIN
 COURSES ON ADMISSIONS.CID=COURSES.CID AND COURSES.FEES >4000

--6)Insert,Update,Delete records into students table using Procedure?
go
create proc insertstutable(@op int,@sid int,@sname varchar(20),@origin char(1),@type char(1))
as
begin
if(@op=1)
insert into Students values(@sid,@sname,@origin,@type)
else if(@op=2)
update Students set sid=@sid ,sname = @sname , ORIGIN =@origin , type = @type where sid=@sid
else if(@op=3)
delete from Students where sid=@sid 
else
print 'not valid op code select 1 for insert , 2 for update, 3 for delete '
end

		go
		exec insertstutable 1,5,'NITYA','L','F'
		exec insertstutable 2,5,'NITYA','F','N'
       exec insertstutable 3,5,'NITYA','F','N'
	   select * from Students

--7)List which course is taken maximum number of students?
SELECT * FROM COURSES WHERE CID IN(
SELECT C.CID FROM ADMISSIONS A,COURSES C WHERE 
A.CID=C.CID GROUP BY C.CID HAVING COUNT(*)=
(SELECT MAX(MYCOUNT) FROM (SELECT COUNT(*) MYCOUNT FROM ADMISSIONS GROUP BY CID)A))

--8)Create trigger for admissions table if the admission is taken 
--on ‘Sunday’?

CREATE TRIGGER TR1
ON ADMISSIONS
FOR INSERT
AS 
BEGIN
  IF DATENAME(DW,GETDATE())='SUNDAY'
  BEGIN
  ROLLBACK
  RAISERROR('CANT INSERT OR DELETE OR UPDATE THE DATA ON SUNDAY',1,1)
  END
  END



--9)Make function to get weekday for given Student id?
create FUNCTION GETWEEKDAY(@SID INT)
RETURNS VARCHAR(20)
BEGIN
DECLARE @DAY VARCHAR(20)
SELECT @DAY=DATENAME(DW,DOJ) FROM ADMISSIONS WHERE SID=@SID
RETURN @DAY
END

SELECT dbo.GETWEEKDAY(1)

--10)List which courses are common for 2 or more students?
SELECT COURSES.CID,COURSES.CNAME  FROM COURSES,ADMISSIONS 
 WHERE COURSES.CID=ADMISSIONS.CID 
GROUP BY COURSES.CID,COURSES.CNAME HAVING COUNT(COURSES.CID)>=2;

select * from courses where cid IN
(select cid from Admissions group by cid having count(sid)>=2)

--11)To define synonym for Students Master?
CREATE SYNONYM S1 FOR STUDENTS
SELECT * FROM S1

--12)To define composite index on Doj,Grade?
CREATE NONCLUSTERED INDEX I1 ON ADMISSIONS(DOJ,GRADE)




